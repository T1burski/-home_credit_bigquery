with credit_bureau as (
select
  SK_ID_CURR,
  sum(case when CREDIT_ACTIVE = 'Active' then 1 else 0 end) as N_ACTIVE,
  sum(case when CREDIT_ACTIVE = 'Sold' then 1 else 0 end) as N_SOLD,
  sum(case when CREDIT_ACTIVE = 'Closed' then 1 else 0 end) as N_CLOSED,
  sum(case when CREDIT_ACTIVE = 'Bad debt' then 1 else 0 end) as N_BADD,
  count(distinct SK_ID_BUREAU) as N_DICT_BUREAU_CREDS,
  max(DAYS_CREDIT) as MAX_DAYS_CREDIT,
  avg(DAYS_CREDIT) as AVG_DAYS_CREDIT,
  max(CREDIT_DAY_OVERDUE) as MAX_CREDIT_DAY_OVERDUE,
  avg(DAYS_CREDIT_ENDDATE) as AVG_DAYS_CREDIT_ENDDATE,
  avg(DAYS_ENDDATE_FACT) as AVG_DAYS_ENDDATE_FACT,
  max(AMT_CREDIT_MAX_OVERDUE) as MAX_AMT_CREDIT_MAX_OVERDUE,
  avg(AMT_CREDIT_MAX_OVERDUE) as AVG_AMT_CREDIT_MAX_OVERDUE,
  sum(AMT_CREDIT_MAX_OVERDUE) as SUM_AMT_CREDIT_MAX_OVERDUE,
  max(CNT_CREDIT_PROLONG) as MAX_CNT_CREDIT_PROLONG,
  avg(AMT_CREDIT_SUM) as AVG_AMT_CREDIT_SUM,
  max(AMT_CREDIT_SUM) as MAX_AMT_CREDIT_SUM,
  sum(AMT_CREDIT_SUM) as SUM_AMT_CREDIT_SUM,
  avg(AMT_CREDIT_SUM_DEBT) as AVG_AMT_CREDIT_SUM_DEBT,
  max(AMT_CREDIT_SUM_DEBT) as MAX_AMT_CREDIT_SUM_DEBT,
  sum(AMT_CREDIT_SUM_DEBT) as SUM_AMT_CREDIT_SUM_DEBT,
  max(AMT_CREDIT_SUM_LIMIT) as MAX_AMT_CREDIT_SUM_LIMIT,
  avg(AMT_CREDIT_SUM_OVERDUE) as AVG_AMT_CREDIT_SUM_OVERDUE,
  max(AMT_CREDIT_SUM_OVERDUE) as MAX_AMT_CREDIT_SUM_OVERDUE,
  sum(AMT_CREDIT_SUM_OVERDUE) as SUM_AMT_CREDIT_SUM_OVERDUE,
  avg(AMT_ANNUITY) as AVG_AMT_AMT_ANNUITY,
  max(AMT_ANNUITY) as MAX_AMT_AMT_ANNUITY,
  sum(AMT_ANNUITY) as SUM_AMT_AMT_ANNUITY
from {{ ref('prd_bureau') }}
group by SK_ID_CURR
)
select
*
from credit_bureau